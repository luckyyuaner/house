<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuan.house.dao.HouseDao">

    <sql id="allColumns">
        house_id, user_id, doorplate, name, orders, type, kind, money, cycle,
        area, floor, elevator, orientation, address, description, words,
        urls, grade, longitude, latitude, status
    </sql>

    <sql id="allColumns2">
        house_id, name, type, money, area, grade, longitude, latitude
    </sql>

    <insert id="addHouse" parameterType="com.yuan.house.model.House">
        INSERT INTO house
        (
            user_id, doorplate, name, orders, type, kind, money, cycle,
            area, floor, elevator, orientation, address, description,
            urls, grade, longitude, latitude, words, status
        )
        VALUES
        (
            #{object.userId}, #{object.doorplate}, #{object.name},#{object.orders},
            #{object.type}, #{object.kind}, #{object.money},#{object.cycle},
            #{object.area}, #{object.floor}, #{object.elevator},#{object.orientation},
            #{object.address}, #{object.description},#{object.urls}, #{object.grade},
            #{object.longitude}, #{object.latitude},#{object.words}, #{object.status}
        )
    </insert>


    <select id="queryHousesByUserId" resultType="com.yuan.house.model.House">
        SELECT
        <include refid="allColumns"/>
        FROM
        house
        WHERE
        user_id = #{uid}
        order by house_id desc;
    </select>

    <select id="queryHousesLikeMsg" resultType="com.yuan.house.model.House">
        SELECT
        <include refid="allColumns"/>
        FROM
        house
        WHERE
        status = 0
        and
        type = #{object.type}
        <if test="object.orientation != null" >
          and orientation = #{object.orientation}
        </if>
        <if test="object.area1 lt object.area2" >
            and area &gt;= #{object.area1} and area &lt;= #{object.area2}
        </if>
        <if test="object.area1 gt object.area2" >
            and area &lt;= #{object.area1} and area &gt;= #{object.area2}
        </if>
        <if test="object.area1 == object.area2 and object.area1 != 0" >
            and area == #{object.area1}
        </if>
        <if test="object.money1 lt object.money2" >
            and money &gt;= #{object.money1} and money &lt;= #{object.money2}
        </if>
        <if test="object.money1 gt object.money2" >
            and money &lt;= #{object.money1} and money &gt;= #{object.money2}
        </if>
        <if test="object.money1 == object.money2 and object.money1 != 0" >
            and money == #{object.money1}
        </if>
        <if test="object.elevator == 0" >
            and elevator = 0
        </if>
        <if test="object.elevator == 1" >
            and elevator = 1
        </if>
        <if test="object.cycle != 0" >
            and cycle = #{object.cycle}
        </if>
        <if test="object.kind != null" >
            <if test="object.kind == '50000'">
                and kind != '00000' and kind != '10000' and kind != '20000'
                and kind != '30000' and kind != '40000'
            </if>
            <if test="object.kind != '00000' and  object.kind != '50000'">
                and kind = #{object.kind}
            </if>
        </if>
        <if test="object.msg != null" >
            <foreach item="item" index="index" collection="object.msg.split(',')"  separator=" " >
                and
                (
                name LIKE CONCAT(CONCAT('%', #{item}), '%')
                OR address LIKE CONCAT(CONCAT('%', #{item}), '%')
                OR description LIKE CONCAT(CONCAT('%', #{item}), '%')
                OR words LIKE CONCAT(CONCAT('%', #{item}), '%')
                )
            </foreach>
        </if>
        order by #{object.show} #{object.sx}
    </select>

    <select id="queryHousesByCity" resultType="com.yuan.house.VO.MapHouseVO">
        SELECT
        <include refid="allColumns2"/>
        FROM
        house
        WHERE
        status = 0
        and address LIKE CONCAT(CONCAT('%', #{city}), '%')
    </select>

    <select id="queryHouseById" resultType="com.yuan.house.model.House">
        SELECT
        <include refid="allColumns"/>
        FROM house
        WHERE house_id = #{id}
        ORDER BY house_id DESC
    </select>


    <update id="updateHouse" parameterType="com.yuan.house.model.House">
        UPDATE house
        SET doorplate = #{object.doorplate}, name = #{object.name}, orders = #{object.orders}, type = #{object.type},
        kind = #{object.kind}, money = #{object.money}, cycle = #{object.cycle}, area = #{object.area},
        floor = #{object.floor}, elevator = #{object.elevator}, orientation = #{object.orientation}, address = #{object.address},
        description = #{object.description}, words = #{object.words}, urls = #{object.urls}, grade = #{object.grade},
        longitude = #{object.longitude}, latitude = #{object.latitude}, status = #{object.status}
        WHERE house_id = #{object.houseId}
    </update>

    <delete id="deleteHouse" parameterType="Long">
        DELETE FROM house WHERE house_id = #{id}
    </delete>

    <select id="queryLandlordByHouse" resultType="com.yuan.house.model.User">
        SELECT
        *
        FROM
        user
        WHERE
        user_id
        in (
        select user_id from house where house_id = #{hid}
        )
    </select>
</mapper>